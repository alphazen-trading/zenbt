from datetime import datetime
from typing import Any
from decimal import Decimal
from enum import Enum

class BBO:
    def ask_price(self) -> Decimal: ...
    def ask_size(self) -> Decimal: ...
    def bid_price(self) -> Decimal: ...
    def bid_size(self) -> Decimal: ...
    def datetime(self) -> str: ...
    def new(
        self,
        time: Decimal,
        code: str,
        bid_size: Decimal,
        bid_price: Decimal,
        ask_size: Decimal,
        ask_price: Decimal,
    ) -> BBO: ...
    def print(self) -> None: ...
    def time(self) -> int: ...

class Contract:
    def code(self) -> str: ...
    def exchange_base_underlying(self) -> str: ...
    def exchange_counter_underlying(self) -> str: ...
    def id(self) -> int: ...
    def is_active(self) -> bool: ...
    def last_price(self) -> Decimal: ...
    def min_order(self) -> Decimal: ...
    def min_order_usd_value(self) -> Decimal: ...
    def new(self, _json: str) -> Contract: ...
    def print(self) -> Any: ...
    def tick_size(self) -> Decimal: ...

class Instrument:
    def bbo(self) -> BBO: ...
    def code(self) -> str: ...
    def contract(self) -> Contract: ...
    def id(self) -> int: ...
    def is_active(self) -> bool: ...
    def min_order_quantity(self) -> Decimal: ...
    def new(self, contract: Contract) -> Instrument: ...
    def on_new_bbo(self, bbo: BBO) -> None: ...
    def round_amount(self, value: Decimal) -> Decimal: ...
    def round_price(self, value: Decimal) -> Decimal: ...
